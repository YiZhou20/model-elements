/**
 * Copyright (c) 2012 The Regents of the University of California.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

@namespace("edu.berkeley.path.ModelElements")

/** 
 * Description of the config and state of our networks and related data.
 *
 * Note: all units in SI (meters, seconds, etc.) except where specified.
 */
protocol ModelElements {
  
  /** seconds and milliseconds, can be absolute or relative
     (when absolute: since epoch, utc) */
  record Time {
    long seconds;
    long milliseconds;
  }
  
  record NodeRef {
    string nodeId;
  }
  
  record LinkRef {
    string linkId;
  }
  
  record NetworkRef {
    string networkId;
  }
  
  record Node {
    string id;
    string name;
    string type;
  }
  
  record Link {
    string id;
    string name;
    string type;
    
    int laneCount;
    double length;

    NodeRef begin;
    NodeRef end;
  }

  record Network {
    string id = "1";
    string name;

    array<Node> nodes = [];
    array<Link> links = [];
  }
  
  /** Density on each link and cell at a point in time */
  record DensityProfile {
    string id;
    
    /** map key is linkId */
    map<array<double>> vehiclesPerMeter = {};
  }
  
  /** Speed on each link and cell at a point in time */
  record SpeedProfile {
    string id;
    
    /** map key is linkId */
    map<array<double>> metersPerSecond = {};
  }
}
