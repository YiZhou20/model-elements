/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package edu.berkeley.path.model_elements_base;  
@SuppressWarnings("all")
/** * Demand time series at a link. The origin link ID is not stored
   * in this record, but as the map key in the DemandSet.profile. */
public class DemandProfile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DemandProfile\",\"namespace\":\"edu.berkeley.path.model_elements_base\",\"doc\":\"* Demand time series at a link. The origin link ID is not stored\\n   * in this record, but as the map key in the DemandSet.profile.\",\"fields\":[{\"name\":\"destinationNetworkId\",\"type\":[\"null\",\"string\"],\"doc\":\"* if null, this profile governs background flow, not OD flow.\"},{\"name\":\"startTime\",\"type\":[\"null\",\"double\"],\"doc\":\"* in seconds; default is 0\",\"default\":0.0},{\"name\":\"sampleRate\",\"type\":[\"null\",\"double\"],\"doc\":\"* in seconds; default is 300 seconds\",\"default\":300.0},{\"name\":\"knob\",\"type\":[\"null\",\"double\"],\"doc\":\"* demand scale factor\",\"default\":1.0},{\"name\":\"std_dev_add\",\"type\":[\"null\",\"double\"],\"default\":0.0},{\"name\":\"std_dev_mult\",\"type\":[\"null\",\"double\"],\"default\":1.0},{\"name\":\"flow\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":\"double\"}},\"doc\":\"* time series of flows;\\n     * map keys is vehTypeId;\\n     * array index is index in time series (\\\"DEMAND_ORDER\\\" in db)\"}]}");
  /** * if null, this profile governs background flow, not OD flow. */
  @Deprecated public java.lang.CharSequence destinationNetworkId;
  /** * in seconds; default is 0 */
  @Deprecated public java.lang.Double startTime;
  /** * in seconds; default is 300 seconds */
  @Deprecated public java.lang.Double sampleRate;
  /** * demand scale factor */
  @Deprecated public java.lang.Double knob;
  @Deprecated public java.lang.Double std_dev_add;
  @Deprecated public java.lang.Double std_dev_mult;
  /** * time series of flows;
     * map keys is vehTypeId;
     * array index is index in time series ("DEMAND_ORDER" in db) */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>> flow;

  /**
   * Default constructor.
   */
  public DemandProfile() {}

  /**
   * All-args constructor.
   */
  public DemandProfile(java.lang.CharSequence destinationNetworkId, java.lang.Double startTime, java.lang.Double sampleRate, java.lang.Double knob, java.lang.Double std_dev_add, java.lang.Double std_dev_mult, java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>> flow) {
    this.destinationNetworkId = destinationNetworkId;
    this.startTime = startTime;
    this.sampleRate = sampleRate;
    this.knob = knob;
    this.std_dev_add = std_dev_add;
    this.std_dev_mult = std_dev_mult;
    this.flow = flow;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return destinationNetworkId;
    case 1: return startTime;
    case 2: return sampleRate;
    case 3: return knob;
    case 4: return std_dev_add;
    case 5: return std_dev_mult;
    case 6: return flow;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: destinationNetworkId = (java.lang.CharSequence)value$; break;
    case 1: startTime = (java.lang.Double)value$; break;
    case 2: sampleRate = (java.lang.Double)value$; break;
    case 3: knob = (java.lang.Double)value$; break;
    case 4: std_dev_add = (java.lang.Double)value$; break;
    case 5: std_dev_mult = (java.lang.Double)value$; break;
    case 6: flow = (java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'destinationNetworkId' field.
   * * if null, this profile governs background flow, not OD flow.   */
  public java.lang.CharSequence getDestinationNetworkId() {
    return destinationNetworkId;
  }

  /**
   * Sets the value of the 'destinationNetworkId' field.
   * * if null, this profile governs background flow, not OD flow.   * @param value the value to set.
   */
  public void setDestinationNetworkId(java.lang.CharSequence value) {
    this.destinationNetworkId = value;
  }

  /**
   * Gets the value of the 'startTime' field.
   * * in seconds; default is 0   */
  public java.lang.Double getStartTime() {
    return startTime;
  }

  /**
   * Sets the value of the 'startTime' field.
   * * in seconds; default is 0   * @param value the value to set.
   */
  public void setStartTime(java.lang.Double value) {
    this.startTime = value;
  }

  /**
   * Gets the value of the 'sampleRate' field.
   * * in seconds; default is 300 seconds   */
  public java.lang.Double getSampleRate() {
    return sampleRate;
  }

  /**
   * Sets the value of the 'sampleRate' field.
   * * in seconds; default is 300 seconds   * @param value the value to set.
   */
  public void setSampleRate(java.lang.Double value) {
    this.sampleRate = value;
  }

  /**
   * Gets the value of the 'knob' field.
   * * demand scale factor   */
  public java.lang.Double getKnob() {
    return knob;
  }

  /**
   * Sets the value of the 'knob' field.
   * * demand scale factor   * @param value the value to set.
   */
  public void setKnob(java.lang.Double value) {
    this.knob = value;
  }

  /**
   * Gets the value of the 'std_dev_add' field.
   */
  public java.lang.Double getStdDevAdd() {
    return std_dev_add;
  }

  /**
   * Sets the value of the 'std_dev_add' field.
   * @param value the value to set.
   */
  public void setStdDevAdd(java.lang.Double value) {
    this.std_dev_add = value;
  }

  /**
   * Gets the value of the 'std_dev_mult' field.
   */
  public java.lang.Double getStdDevMult() {
    return std_dev_mult;
  }

  /**
   * Sets the value of the 'std_dev_mult' field.
   * @param value the value to set.
   */
  public void setStdDevMult(java.lang.Double value) {
    this.std_dev_mult = value;
  }

  /**
   * Gets the value of the 'flow' field.
   * * time series of flows;
     * map keys is vehTypeId;
     * array index is index in time series ("DEMAND_ORDER" in db)   */
  public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>> getFlow() {
    return flow;
  }

  /**
   * Sets the value of the 'flow' field.
   * * time series of flows;
     * map keys is vehTypeId;
     * array index is index in time series ("DEMAND_ORDER" in db)   * @param value the value to set.
   */
  public void setFlow(java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>> value) {
    this.flow = value;
  }

  /** Creates a new DemandProfile RecordBuilder */
  public static edu.berkeley.path.model_elements_base.DemandProfile.Builder newBuilder() {
    return new edu.berkeley.path.model_elements_base.DemandProfile.Builder();
  }
  
  /** Creates a new DemandProfile RecordBuilder by copying an existing Builder */
  public static edu.berkeley.path.model_elements_base.DemandProfile.Builder newBuilder(edu.berkeley.path.model_elements_base.DemandProfile.Builder other) {
    return new edu.berkeley.path.model_elements_base.DemandProfile.Builder(other);
  }
  
  /** Creates a new DemandProfile RecordBuilder by copying an existing DemandProfile instance */
  public static edu.berkeley.path.model_elements_base.DemandProfile.Builder newBuilder(edu.berkeley.path.model_elements_base.DemandProfile other) {
    return new edu.berkeley.path.model_elements_base.DemandProfile.Builder(other);
  }
  
  /**
   * RecordBuilder for DemandProfile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DemandProfile>
    implements org.apache.avro.data.RecordBuilder<DemandProfile> {

    private java.lang.CharSequence destinationNetworkId;
    private java.lang.Double startTime;
    private java.lang.Double sampleRate;
    private java.lang.Double knob;
    private java.lang.Double std_dev_add;
    private java.lang.Double std_dev_mult;
    private java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>> flow;

    /** Creates a new Builder */
    private Builder() {
      super(edu.berkeley.path.model_elements_base.DemandProfile.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(edu.berkeley.path.model_elements_base.DemandProfile.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing DemandProfile instance */
    private Builder(edu.berkeley.path.model_elements_base.DemandProfile other) {
            super(edu.berkeley.path.model_elements_base.DemandProfile.SCHEMA$);
      if (isValidValue(fields()[0], other.destinationNetworkId)) {
        this.destinationNetworkId = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.destinationNetworkId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startTime)) {
        this.startTime = (java.lang.Double) data().deepCopy(fields()[1].schema(), other.startTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sampleRate)) {
        this.sampleRate = (java.lang.Double) data().deepCopy(fields()[2].schema(), other.sampleRate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.knob)) {
        this.knob = (java.lang.Double) data().deepCopy(fields()[3].schema(), other.knob);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.std_dev_add)) {
        this.std_dev_add = (java.lang.Double) data().deepCopy(fields()[4].schema(), other.std_dev_add);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.std_dev_mult)) {
        this.std_dev_mult = (java.lang.Double) data().deepCopy(fields()[5].schema(), other.std_dev_mult);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.flow)) {
        this.flow = (java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>>) data().deepCopy(fields()[6].schema(), other.flow);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'destinationNetworkId' field */
    public java.lang.CharSequence getDestinationNetworkId() {
      return destinationNetworkId;
    }
    
    /** Sets the value of the 'destinationNetworkId' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder setDestinationNetworkId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.destinationNetworkId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'destinationNetworkId' field has been set */
    public boolean hasDestinationNetworkId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'destinationNetworkId' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder clearDestinationNetworkId() {
      destinationNetworkId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'startTime' field */
    public java.lang.Double getStartTime() {
      return startTime;
    }
    
    /** Sets the value of the 'startTime' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder setStartTime(java.lang.Double value) {
      validate(fields()[1], value);
      this.startTime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'startTime' field has been set */
    public boolean hasStartTime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'startTime' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder clearStartTime() {
      startTime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'sampleRate' field */
    public java.lang.Double getSampleRate() {
      return sampleRate;
    }
    
    /** Sets the value of the 'sampleRate' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder setSampleRate(java.lang.Double value) {
      validate(fields()[2], value);
      this.sampleRate = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'sampleRate' field has been set */
    public boolean hasSampleRate() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'sampleRate' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder clearSampleRate() {
      sampleRate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'knob' field */
    public java.lang.Double getKnob() {
      return knob;
    }
    
    /** Sets the value of the 'knob' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder setKnob(java.lang.Double value) {
      validate(fields()[3], value);
      this.knob = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'knob' field has been set */
    public boolean hasKnob() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'knob' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder clearKnob() {
      knob = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'std_dev_add' field */
    public java.lang.Double getStdDevAdd() {
      return std_dev_add;
    }
    
    /** Sets the value of the 'std_dev_add' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder setStdDevAdd(java.lang.Double value) {
      validate(fields()[4], value);
      this.std_dev_add = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'std_dev_add' field has been set */
    public boolean hasStdDevAdd() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'std_dev_add' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder clearStdDevAdd() {
      std_dev_add = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'std_dev_mult' field */
    public java.lang.Double getStdDevMult() {
      return std_dev_mult;
    }
    
    /** Sets the value of the 'std_dev_mult' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder setStdDevMult(java.lang.Double value) {
      validate(fields()[5], value);
      this.std_dev_mult = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'std_dev_mult' field has been set */
    public boolean hasStdDevMult() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'std_dev_mult' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder clearStdDevMult() {
      std_dev_mult = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'flow' field */
    public java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>> getFlow() {
      return flow;
    }
    
    /** Sets the value of the 'flow' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder setFlow(java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>> value) {
      validate(fields()[6], value);
      this.flow = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'flow' field has been set */
    public boolean hasFlow() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'flow' field */
    public edu.berkeley.path.model_elements_base.DemandProfile.Builder clearFlow() {
      flow = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public DemandProfile build() {
      try {
        DemandProfile record = new DemandProfile();
        record.destinationNetworkId = fieldSetFlags()[0] ? this.destinationNetworkId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.startTime = fieldSetFlags()[1] ? this.startTime : (java.lang.Double) defaultValue(fields()[1]);
        record.sampleRate = fieldSetFlags()[2] ? this.sampleRate : (java.lang.Double) defaultValue(fields()[2]);
        record.knob = fieldSetFlags()[3] ? this.knob : (java.lang.Double) defaultValue(fields()[3]);
        record.std_dev_add = fieldSetFlags()[4] ? this.std_dev_add : (java.lang.Double) defaultValue(fields()[4]);
        record.std_dev_mult = fieldSetFlags()[5] ? this.std_dev_mult : (java.lang.Double) defaultValue(fields()[5]);
        record.flow = fieldSetFlags()[6] ? this.flow : (java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Double>>) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
