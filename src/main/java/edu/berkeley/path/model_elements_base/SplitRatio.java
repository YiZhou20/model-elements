/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package edu.berkeley.path.model_elements_base;  
@SuppressWarnings("all")
/** * Split ratio at a node, at one point in time, for one in-link, one
   * out-link, and one vehicle type. These values are not stored
   * in this record, but as the map keys of the SplitRatioProfile. */
public class SplitRatio extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SplitRatio\",\"namespace\":\"edu.berkeley.path.model_elements_base\",\"doc\":\"* Split ratio at a node, at one point in time, for one in-link, one\\n   * out-link, and one vehicle type. These values are not stored\\n   * in this record, but as the map keys of the SplitRatioProfile.\",\"fields\":[{\"name\":\"ratioOrder\",\"type\":\"int\",\"doc\":\"* The order that this ratio should be used when traversing.\"},{\"name\":\"ratio\",\"type\":\"double\",\"doc\":\"* The actual raio for this node, this entry and this exit link,\\n     * and this vehicle type.\"}]}");
  /** * The order that this ratio should be used when traversing. */
  @Deprecated public int ratioOrder;
  /** * The actual raio for this node, this entry and this exit link,
     * and this vehicle type. */
  @Deprecated public double ratio;

  /**
   * Default constructor.
   */
  public SplitRatio() {}

  /**
   * All-args constructor.
   */
  public SplitRatio(java.lang.Integer ratioOrder, java.lang.Double ratio) {
    this.ratioOrder = ratioOrder;
    this.ratio = ratio;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ratioOrder;
    case 1: return ratio;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ratioOrder = (java.lang.Integer)value$; break;
    case 1: ratio = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ratioOrder' field.
   * * The order that this ratio should be used when traversing.   */
  public java.lang.Integer getRatioOrder() {
    return ratioOrder;
  }

  /**
   * Sets the value of the 'ratioOrder' field.
   * * The order that this ratio should be used when traversing.   * @param value the value to set.
   */
  public void setRatioOrder(java.lang.Integer value) {
    this.ratioOrder = value;
  }

  /**
   * Gets the value of the 'ratio' field.
   * * The actual raio for this node, this entry and this exit link,
     * and this vehicle type.   */
  public java.lang.Double getRatio() {
    return ratio;
  }

  /**
   * Sets the value of the 'ratio' field.
   * * The actual raio for this node, this entry and this exit link,
     * and this vehicle type.   * @param value the value to set.
   */
  public void setRatio(java.lang.Double value) {
    this.ratio = value;
  }

  /** Creates a new SplitRatio RecordBuilder */
  public static edu.berkeley.path.model_elements_base.SplitRatio.Builder newBuilder() {
    return new edu.berkeley.path.model_elements_base.SplitRatio.Builder();
  }
  
  /** Creates a new SplitRatio RecordBuilder by copying an existing Builder */
  public static edu.berkeley.path.model_elements_base.SplitRatio.Builder newBuilder(edu.berkeley.path.model_elements_base.SplitRatio.Builder other) {
    return new edu.berkeley.path.model_elements_base.SplitRatio.Builder(other);
  }
  
  /** Creates a new SplitRatio RecordBuilder by copying an existing SplitRatio instance */
  public static edu.berkeley.path.model_elements_base.SplitRatio.Builder newBuilder(edu.berkeley.path.model_elements_base.SplitRatio other) {
    return new edu.berkeley.path.model_elements_base.SplitRatio.Builder(other);
  }
  
  /**
   * RecordBuilder for SplitRatio instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SplitRatio>
    implements org.apache.avro.data.RecordBuilder<SplitRatio> {

    private int ratioOrder;
    private double ratio;

    /** Creates a new Builder */
    private Builder() {
      super(edu.berkeley.path.model_elements_base.SplitRatio.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(edu.berkeley.path.model_elements_base.SplitRatio.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing SplitRatio instance */
    private Builder(edu.berkeley.path.model_elements_base.SplitRatio other) {
            super(edu.berkeley.path.model_elements_base.SplitRatio.SCHEMA$);
      if (isValidValue(fields()[0], other.ratioOrder)) {
        this.ratioOrder = (java.lang.Integer) data().deepCopy(fields()[0].schema(), other.ratioOrder);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ratio)) {
        this.ratio = (java.lang.Double) data().deepCopy(fields()[1].schema(), other.ratio);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'ratioOrder' field */
    public java.lang.Integer getRatioOrder() {
      return ratioOrder;
    }
    
    /** Sets the value of the 'ratioOrder' field */
    public edu.berkeley.path.model_elements_base.SplitRatio.Builder setRatioOrder(int value) {
      validate(fields()[0], value);
      this.ratioOrder = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ratioOrder' field has been set */
    public boolean hasRatioOrder() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ratioOrder' field */
    public edu.berkeley.path.model_elements_base.SplitRatio.Builder clearRatioOrder() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'ratio' field */
    public java.lang.Double getRatio() {
      return ratio;
    }
    
    /** Sets the value of the 'ratio' field */
    public edu.berkeley.path.model_elements_base.SplitRatio.Builder setRatio(double value) {
      validate(fields()[1], value);
      this.ratio = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'ratio' field has been set */
    public boolean hasRatio() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'ratio' field */
    public edu.berkeley.path.model_elements_base.SplitRatio.Builder clearRatio() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public SplitRatio build() {
      try {
        SplitRatio record = new SplitRatio();
        record.ratioOrder = fieldSetFlags()[0] ? this.ratioOrder : (java.lang.Integer) defaultValue(fields()[0]);
        record.ratio = fieldSetFlags()[1] ? this.ratio : (java.lang.Double) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
