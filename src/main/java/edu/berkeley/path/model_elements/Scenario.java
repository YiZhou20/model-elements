/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package edu.berkeley.path.model_elements;  
@SuppressWarnings("all")
public class Scenario extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Scenario\",\"namespace\":\"edu.berkeley.path.model_elements\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"network\",\"type\":{\"type\":\"record\",\"name\":\"Network\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"default\":\"1\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"nodes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Node\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"}]}},\"default\":[]},{\"name\":\"links\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Link\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"laneCount\",\"type\":\"double\"},{\"name\":\"length\",\"type\":\"double\"},{\"name\":\"laneOffset\",\"type\":\"int\",\"default\":0},{\"name\":\"begin\",\"type\":{\"type\":\"record\",\"name\":\"NodeRef\",\"fields\":[{\"name\":\"nodeId\",\"type\":\"string\"}]}},{\"name\":\"end\",\"type\":\"NodeRef\"}]}},\"default\":[]}]}},{\"name\":\"initialDensityProfile\",\"type\":{\"type\":\"record\",\"name\":\"DensityProfile\",\"doc\":\"Density on each link and cell at a point in time\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"vehiclesPerMeter\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":\"double\"}},\"doc\":\"map key is linkId\",\"default\":{}}]}},{\"name\":\"fdProfile\",\"type\":{\"type\":\"record\",\"name\":\"FDProfile\",\"doc\":\"Fundamental diagrams on each link as time series\",\"fields\":[{\"name\":\"dt\",\"type\":\"double\",\"default\":300.0},{\"name\":\"startTime\",\"type\":\"double\",\"default\":0.0},{\"name\":\"fd\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"FD\",\"doc\":\"Fundamental diagram on one link at one time\",\"fields\":[{\"name\":\"freeFlowSpeed\",\"type\":\"double\"},{\"name\":\"freeFlowSpeedStdev\",\"type\":\"double\"},{\"name\":\"congestionWaveSpeed\",\"type\":\"double\"},{\"name\":\"congestionWaveSpeedStdev\",\"type\":\"double\"},{\"name\":\"capacity\",\"type\":\"double\"},{\"name\":\"capacityStdev\",\"type\":\"double\"},{\"name\":\"jamDensity\",\"type\":\"double\"},{\"name\":\"capacityDrop\",\"type\":\"double\"}]}}},\"doc\":\"map key is linkId, array is time series, as per dt and startTime.\",\"default\":{}}]}},{\"name\":\"demandProfile\",\"type\":{\"type\":\"record\",\"name\":\"DemandProfile\",\"doc\":\"Demands on each link as time series\",\"fields\":[{\"name\":\"dt\",\"type\":\"double\",\"default\":300.0},{\"name\":\"startTime\",\"type\":\"double\",\"default\":0.0},{\"name\":\"origin\",\"type\":{\"type\":\"record\",\"name\":\"LinkRef\",\"fields\":[{\"name\":\"linkId\",\"type\":\"string\"}]},\"doc\":\"may not be null\"},{\"name\":\"destination\",\"type\":\"LinkRef\",\"doc\":\"may be null\"},{\"name\":\"demand\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":\"double\"}},\"doc\":\"map key is linkId, array is time series, as per dt and startTime.\",\"default\":{}}]}}]}");
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public edu.berkeley.path.model_elements.Network network;
  @Deprecated public edu.berkeley.path.model_elements.DensityProfile initialDensityProfile;
  @Deprecated public edu.berkeley.path.model_elements.FDProfile fdProfile;
  @Deprecated public edu.berkeley.path.model_elements.DemandProfile demandProfile;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return network;
    case 3: return initialDensityProfile;
    case 4: return fdProfile;
    case 5: return demandProfile;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: network = (edu.berkeley.path.model_elements.Network)value$; break;
    case 3: initialDensityProfile = (edu.berkeley.path.model_elements.DensityProfile)value$; break;
    case 4: fdProfile = (edu.berkeley.path.model_elements.FDProfile)value$; break;
    case 5: demandProfile = (edu.berkeley.path.model_elements.DemandProfile)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'network' field.
   */
  public edu.berkeley.path.model_elements.Network getNetwork() {
    return network;
  }

  /**
   * Sets the value of the 'network' field.
   * @param value the value to set.
   */
  public void setNetwork(edu.berkeley.path.model_elements.Network value) {
    this.network = value;
  }

  /**
   * Gets the value of the 'initialDensityProfile' field.
   */
  public edu.berkeley.path.model_elements.DensityProfile getInitialDensityProfile() {
    return initialDensityProfile;
  }

  /**
   * Sets the value of the 'initialDensityProfile' field.
   * @param value the value to set.
   */
  public void setInitialDensityProfile(edu.berkeley.path.model_elements.DensityProfile value) {
    this.initialDensityProfile = value;
  }

  /**
   * Gets the value of the 'fdProfile' field.
   */
  public edu.berkeley.path.model_elements.FDProfile getFdProfile() {
    return fdProfile;
  }

  /**
   * Sets the value of the 'fdProfile' field.
   * @param value the value to set.
   */
  public void setFdProfile(edu.berkeley.path.model_elements.FDProfile value) {
    this.fdProfile = value;
  }

  /**
   * Gets the value of the 'demandProfile' field.
   */
  public edu.berkeley.path.model_elements.DemandProfile getDemandProfile() {
    return demandProfile;
  }

  /**
   * Sets the value of the 'demandProfile' field.
   * @param value the value to set.
   */
  public void setDemandProfile(edu.berkeley.path.model_elements.DemandProfile value) {
    this.demandProfile = value;
  }

  /** Creates a new Scenario RecordBuilder */
  public static edu.berkeley.path.model_elements.Scenario.Builder newBuilder() {
    return new edu.berkeley.path.model_elements.Scenario.Builder();
  }
  
  /** Creates a new Scenario RecordBuilder by copying an existing Builder */
  public static edu.berkeley.path.model_elements.Scenario.Builder newBuilder(edu.berkeley.path.model_elements.Scenario.Builder other) {
    return new edu.berkeley.path.model_elements.Scenario.Builder(other);
  }
  
  /** Creates a new Scenario RecordBuilder by copying an existing Scenario instance */
  public static edu.berkeley.path.model_elements.Scenario.Builder newBuilder(edu.berkeley.path.model_elements.Scenario other) {
    return new edu.berkeley.path.model_elements.Scenario.Builder(other);
  }
  
  /**
   * RecordBuilder for Scenario instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Scenario>
    implements org.apache.avro.data.RecordBuilder<Scenario> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence name;
    private edu.berkeley.path.model_elements.Network network;
    private edu.berkeley.path.model_elements.DensityProfile initialDensityProfile;
    private edu.berkeley.path.model_elements.FDProfile fdProfile;
    private edu.berkeley.path.model_elements.DemandProfile demandProfile;

    /** Creates a new Builder */
    private Builder() {
      super(edu.berkeley.path.model_elements.Scenario.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(edu.berkeley.path.model_elements.Scenario.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Scenario instance */
    private Builder(edu.berkeley.path.model_elements.Scenario other) {
            super(edu.berkeley.path.model_elements.Scenario.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.network)) {
        this.network = (edu.berkeley.path.model_elements.Network) data().deepCopy(fields()[2].schema(), other.network);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.initialDensityProfile)) {
        this.initialDensityProfile = (edu.berkeley.path.model_elements.DensityProfile) data().deepCopy(fields()[3].schema(), other.initialDensityProfile);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fdProfile)) {
        this.fdProfile = (edu.berkeley.path.model_elements.FDProfile) data().deepCopy(fields()[4].schema(), other.fdProfile);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.demandProfile)) {
        this.demandProfile = (edu.berkeley.path.model_elements.DemandProfile) data().deepCopy(fields()[5].schema(), other.demandProfile);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public edu.berkeley.path.model_elements.Scenario.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public edu.berkeley.path.model_elements.Scenario.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public edu.berkeley.path.model_elements.Scenario.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'name' field */
    public edu.berkeley.path.model_elements.Scenario.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'network' field */
    public edu.berkeley.path.model_elements.Network getNetwork() {
      return network;
    }
    
    /** Sets the value of the 'network' field */
    public edu.berkeley.path.model_elements.Scenario.Builder setNetwork(edu.berkeley.path.model_elements.Network value) {
      validate(fields()[2], value);
      this.network = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'network' field has been set */
    public boolean hasNetwork() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'network' field */
    public edu.berkeley.path.model_elements.Scenario.Builder clearNetwork() {
      network = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'initialDensityProfile' field */
    public edu.berkeley.path.model_elements.DensityProfile getInitialDensityProfile() {
      return initialDensityProfile;
    }
    
    /** Sets the value of the 'initialDensityProfile' field */
    public edu.berkeley.path.model_elements.Scenario.Builder setInitialDensityProfile(edu.berkeley.path.model_elements.DensityProfile value) {
      validate(fields()[3], value);
      this.initialDensityProfile = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'initialDensityProfile' field has been set */
    public boolean hasInitialDensityProfile() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'initialDensityProfile' field */
    public edu.berkeley.path.model_elements.Scenario.Builder clearInitialDensityProfile() {
      initialDensityProfile = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'fdProfile' field */
    public edu.berkeley.path.model_elements.FDProfile getFdProfile() {
      return fdProfile;
    }
    
    /** Sets the value of the 'fdProfile' field */
    public edu.berkeley.path.model_elements.Scenario.Builder setFdProfile(edu.berkeley.path.model_elements.FDProfile value) {
      validate(fields()[4], value);
      this.fdProfile = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'fdProfile' field has been set */
    public boolean hasFdProfile() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'fdProfile' field */
    public edu.berkeley.path.model_elements.Scenario.Builder clearFdProfile() {
      fdProfile = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'demandProfile' field */
    public edu.berkeley.path.model_elements.DemandProfile getDemandProfile() {
      return demandProfile;
    }
    
    /** Sets the value of the 'demandProfile' field */
    public edu.berkeley.path.model_elements.Scenario.Builder setDemandProfile(edu.berkeley.path.model_elements.DemandProfile value) {
      validate(fields()[5], value);
      this.demandProfile = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'demandProfile' field has been set */
    public boolean hasDemandProfile() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'demandProfile' field */
    public edu.berkeley.path.model_elements.Scenario.Builder clearDemandProfile() {
      demandProfile = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public Scenario build() {
      try {
        Scenario record = new Scenario();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.network = fieldSetFlags()[2] ? this.network : (edu.berkeley.path.model_elements.Network) defaultValue(fields()[2]);
        record.initialDensityProfile = fieldSetFlags()[3] ? this.initialDensityProfile : (edu.berkeley.path.model_elements.DensityProfile) defaultValue(fields()[3]);
        record.fdProfile = fieldSetFlags()[4] ? this.fdProfile : (edu.berkeley.path.model_elements.FDProfile) defaultValue(fields()[4]);
        record.demandProfile = fieldSetFlags()[5] ? this.demandProfile : (edu.berkeley.path.model_elements.DemandProfile) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
